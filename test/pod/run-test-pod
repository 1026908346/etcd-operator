#!/usr/bin/env bash

# This script runs the test-pod with the specified TEST_IMAGE and necessary envs for e2e tests

set -o errexit
set -o nounset
set -o pipefail

: ${TEST_IMAGE:?"Need to set TEST_IMAGE, e.g. gcr.io/coreos-k8s-scale-testing/etcd-operator-tests"}
: ${TEST_NAMESPACE:?"Need to set TEST_NAMESPACE"}
: ${TEST_S3_BUCKET:?"Need to set TEST_S3_BUCKET"}

PASSES=${PASSES:-"e2e e2eslow"}
OPERATOR_IMAGE=${OPERATOR_IMAGE:-"quay.io/coreos/etcd-operator:dev"}

# Leave blank to run all tests
# To run a particular test set to test name e.g: E2E_TEST_SELECTOR="CreateCluster"
E2E_TEST_SELECTOR=${E2E_TEST_SELECTOR:-""}

TEST_AWS_SECRET=${TEST_AWS_SECRET:-"aws-secret"}

POD_NAME=${POD_NAME:-"eop-testing"}

# TODO: Setup RBAC for the test-pod

# Run the test-pod in the given namespace
sed -e "s|<POD_NAME>|${POD_NAME}|g" \
    -e "s|<TEST_IMAGE>|${TEST_IMAGE}|g" \
    -e "s|<PASSES>|${PASSES}|g" \
    -e "s|<OPERATOR_IMAGE>|${OPERATOR_IMAGE}|g" \
    -e "s|<E2E_TEST_SELECTOR>|${E2E_TEST_SELECTOR}|g" \
    -e "s|<TEST_S3_BUCKET>|${TEST_S3_BUCKET}|g" \
    -e "s|<TEST_AWS_SECRET>|${TEST_AWS_SECRET}|g" \
    test/pod/test-pod.yaml \
    | kubectl -n ${TEST_NAMESPACE} create -f -

function cleanup {
	kubectl -n ${TEST_NAMESPACE} delete pod ${POD_NAME}
}
trap cleanup EXIT


PHASE_RUNNING="Running"
PHASE_SUCCEEDED="Succeeded"
RETRY_INTERVAL=5

# Wait until pod is running
echo "Waiting for test-pod to start runnning"
POD_PHASE=""
until [ "${POD_PHASE}" == "${PHASE_RUNNING}" ]
do
    sleep ${RETRY_INTERVAL}
    POD_PHASE=$(kubectl -n ${TEST_NAMESPACE} get pod ${POD_NAME} -o jsonpath='{.status.phase}')
done

# Print out logs until pod stops running
echo "test-pod logs"
echo "=============="
kubectl -n ${TEST_NAMESPACE} logs -f ${POD_NAME}
echo "=============="

# Check for pod success or failure
POD_PHASE=$(kubectl -n ${TEST_NAMESPACE} get pod ${POD_NAME} -o jsonpath='{.status.phase}')
if [ "${POD_PHASE}" == "${PHASE_SUCCEEDED}" ]; then
    echo "e2e tests finished successfully"
else
    echo "e2e tests failed"
    exit 1
fi
