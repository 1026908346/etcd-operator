#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

# Create ClusterRole
cat <<EOF | kubectl create -f -
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: etcd-operator
rules:
- apiGroups:
  - etcd.coreos.com
  resources:
  - clusters
  verbs:
  - "*"
- apiGroups:
  - extensions
  resources:
  - thirdpartyresources
  verbs:
  - create
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  verbs:
  - "*"
- apiGroups:
  - extensions
  resources:
  - replicasets
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
EOF

# Create ClusterRoleBinding in namespace
cat <<EOF | kubectl create -f -
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: etcd-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: etcd-operator
subjects:
- kind: ServiceAccount
  name: default
  namespace: $TEST_NAMESPACE
EOF

# Check if ClusterRole and ClusterRoleBinding created
kubectl --kubeconfig=$KUBECONFIG get clusterrole etcd-operator 1> /dev/null
kubectl --kubeconfig=$KUBECONFIG get clusterrolebinding etcd-operator 1> /dev/null
